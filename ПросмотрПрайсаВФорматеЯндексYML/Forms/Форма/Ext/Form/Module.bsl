
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КатегорииТовараПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Отбор = Новый Структура("КодКатегории", Элемент.ТекущиеДанные.КодКатегории);
		Элементы.ТаблицаПрайса.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);
	Иначе
		Элементы.ТаблицаПрайса.ОтборСтрок = Неопределено;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеМагазинаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.СсылкаНаМагазин) Тогда
		ЗапуститьПриложение(Объект.СсылкаНаМагазин);
	КонецЕсли; 
	
КонецПроцедуры

#Область ВыборФайла

&НаКлиенте
Процедура ПутьКФайлуПрайсаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла     = "";
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Фильтр             = НСтр("ru = 'Формат прайса для Яндекс.Маркет'; en = 'YML File'") + "(*.yml)|*.yml";
	
	Если Диалог.Выбрать() Тогда
		
		Объект.ПутьКФайлуПрайса = Диалог.ПолноеИмяФайла;
		
		//АдресХранилища = "";
		Оповещение = Новый ОписаниеОповещения("ПутьКФайлуПрайсаНачалоВыбораЗавершение", ЭтаФорма);
		НачатьПомещениеФайла(Оповещение, , Объект.ПутьКФайлуПрайса, Ложь, ЭтаФорма.УникальныйИдентификатор);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуПрайсаНачалоВыбораЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Результат Тогда
		ЗагрузитьДанныеФайла(Адрес);
	КонецЕсли; 

	//Элементы.КатегорииТовара
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 


#Область ЗагрузкаДанныхИзФайла

Процедура ЗагрузитьДанныеФайла(АдресХранилища)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	КатегорииТовара = РеквизитФормыВЗначение("Объект.КатегорииТовара");
	ТаблицаПрайса   = РеквизитФормыВЗначение("Объект.ТаблицаПрайса");
	
	// Получение файла с клиента
	ДвоичныеДанные     = ПолучитьИзВременногоХранилища(АдресХранилища);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("yml");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	// Подготовка объектов работы с DOM
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ИмяВременногоФайла);
	
	Построитель = Новый ПостроительDOM;
	ДокументDOM = Построитель.Прочитать(Чтение);
	
	// Данные магазина
	ЗагрузкаШапкиДокумента(ДокументDOM);
	
	// Загрузка категорий
	ЗагрузитьКатегорииТоваров(КатегорииТовара, ДокументDOM);
	ЗначениеВРеквизитФормы(КатегорииТовара, "Объект.КатегорииТовара");
	
	// Загрузка данных по товарам
	ЗагрузитьДанныеТовара(ДокументDOM, ТаблицаПрайса);
	
КонецПроцедуры

#Область ЗагрузкаШапкиПрайса

Процедура ЗагрузкаШапкиДокумента(ДокументDOM)
	
	Объект.НазваниеМагазина    = "";
	Объект.НазваниеОрганизации = "";
	Объект.СсылкаНаМагазин     = "";
	
	// Название магазина
	ПутьКНазваниюМагазина = "/yml_catalog/shop/name";
	Объект.НазваниеМагазина = ПолучитьТекстЭементаПоПути(ДокументDOM, ПутьКНазваниюМагазина);
	
	// Путь к названию организации
	ПутьКНазваниюОрганизаци = "/yml_catalog/shop/company";
	Объект.НазваниеОрганизации = ПолучитьТекстЭементаПоПути(ДокументDOM, ПутьКНазваниюОрганизаци);
	
	// Путь к ссылке на сайт 
	ПутьКСсылке = "/yml_catalog/shop/url";
	Объект.СсылкаНаМагазин = ПолучитьТекстЭементаПоПути(ДокументDOM, ПутьКСсылке);
	
КонецПроцедуры 

// Возвращает содержимое элемента найденного по указанному пути, если элемент не найден, будет возвращена пустая строка.
Функция ПолучитьТекстЭементаПоПути(ДокументDOM, ПутьКЭлементу) 
	
	СодержимоеЭлемента = "";
	Разыменователь = Новый РазыменовательПространствИменDOM(ДокументDOM);
	Результат      = ДокументDOM.ВычислитьВыражениеXPath(ПутьКЭлементу, ДокументDOM, Разыменователь);
		
	ТекЭлемент = Результат.ПолучитьСледующий();
	Если ТекЭлемент <> Неопределено Тогда
		СодержимоеЭлемента = ТекЭлемент.ТекстовоеСодержимое;
	КонецЕсли; 

	Возврат СодержимоеЭлемента;
	
КонецФункции 

#КонецОбласти 

#Область ЗагрузкаКатегорий

Процедура ЗагрузитьКатегорииТоваров(КатегорииТовара, ДокументDOM)
	
	КатегорииТовара.Строки.Очистить();
	
	ПутьКатегорий = "/yml_catalog/shop/categories/*";
	Разыменователь = Новый РазыменовательПространствИменDOM(ДокументDOM);
	Результат      = ДокументDOM.ВычислитьВыражениеXPath(ПутьКатегорий, ДокументDOM, Разыменователь);
	
	КорневыеЭлементы      = Новый Массив;       // узлы без родителя
	ДочерниеЭлементы      = Новый Соответствие; // [ЭлементDOM => КодРодителя]
	ЭлементыПоКоду        = Новый Соответствие; // [КодЭлемента => ЭлементDOM]
	СтрокиДереваЭлементов = Новый Соответствие; // [ЭлементDOM => СтрокаДерева]
	
	Пока Истина Цикл
		
		ТекЭлемент = Результат.ПолучитьСледующий();
		Если ТекЭлемент = Неопределено Тогда
			Прервать;
		КонецЕсли; 
		
		НомерРодителя = ТекЭлемент.ПолучитьАтрибут("parentId");
		Если НомерРодителя = Неопределено ИЛИ НомерРодителя = "" ИЛИ НомерРодителя = "0" Тогда
			ДобавитьУзелВСписок(КорневыеЭлементы, ТекЭлемент);
		Иначе
			ДобавитьПодченныйЭлементВСоответствие(ДочерниеЭлементы, ТекЭлемент, ТекЭлемент.ПолучитьАтрибут("parentId"));
		КонецЕсли;
		
		ДобавитьУзелВСоответствиеПоКоду(ЭлементыПоКоду, ТекЭлемент, ТекЭлемент.ПолучитьАтрибут("id"))
		
	КонецЦикла; 
	
	// Добавить корневые узлы
	Для Каждого ТекЭлемент ИЗ КорневыеЭлементы Цикл
		
		СтрокаДерева = КатегорииТовара.Строки.Добавить();
		СтрокаДерева.ИмяКатегории = ТекЭлемент.ТекстовоеСодержимое;
		СтрокаДерева.КодКатегории = ТекЭлемент.ПолучитьАтрибут("id");
		
		ДобавитьУзелВСоответствиеСтрокДерева(СтрокиДереваЭлементов, ТекЭлемент, СтрокаДерева);
		
	КонецЦикла; 	
	
	// Добавить дочерние узлы
	МакЧислоИтераций = 1000;
	НомерИтерации    = 0;
	Пока ДочерниеЭлементы.Количество() > 0 Цикл
		
		НомерИтерации = НомерИтерации + 1;
		Если НомерИтерации > МакЧислоИтераций Тогда
			Прервать;  // защита от бесконечной рекурсии
		КонецЕсли; 
		
		// Обходим оставшиеся элементы и если их владелец есть в дереве, то добавляем в качестве подчиненных узлов дерева 
		// и удаляем из списка не загруженных дочерних элементов (ДочерниеЭлементы)
		Для Каждого Элемент ИЗ ДочерниеЭлементы Цикл
			
			ТекЭлемент  = Элемент.Ключ;
			КодРодителя = Элемент.Значение;
			
			ЭлементРодителя = ЭлементыПоКоду.Получить(КодРодителя);
			СтрокаРодителя  = СтрокиДереваЭлементов.Получить(ЭлементРодителя);
			
			Если СтрокаРодителя <> Неопределено Тогда
				
				СтрокаДерева = СтрокаРодителя.Строки.Добавить();
				СтрокаДерева.ИмяКатегории = ТекЭлемент.ТекстовоеСодержимое;
				СтрокаДерева.КодКатегории = ТекЭлемент.ПолучитьАтрибут("id");
				
				ДобавитьУзелВСоответствиеСтрокДерева(СтрокиДереваЭлементов, ТекЭлемент, СтрокаДерева);
				ДочерниеЭлементы.Удалить(ТекЭлемент);
				
			КонецЕсли; 
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры 

Процедура ДобавитьУзелВСписок(СписокУзлов, Знач Узел)
	СписокУзлов.Добавить(Узел);
КонецПроцедуры 

Процедура ДобавитьУзелВСоответствиеПоРодителю(УзлыПоРодителю, Знач Узел)
	УзлыПоРодителю.Вставить(Узел, Узел.ПолучитьАтрибут("parentId"));
КонецПроцедуры 

Процедура ДобавитьУзелВСоответствиеПоКоду(УзлыПоКоду, Знач Узел, Знач Код)
	УзлыПоКоду.Вставить(Код, Узел);
КонецПроцедуры 

Процедура ДобавитьУзелВСоответствиеСтрокДерева(УзлыСтрокДерева, Знач Узел, СтрокаДерева)
	УзлыСтрокДерева.Вставить(Узел, СтрокаДерева);
КонецПроцедуры 

Процедура ДобавитьПодченныйЭлементВСоответствие(ПодчиненныеУзлы, Знач Элемент, КодРодителя)
	ПодчиненныеУзлы.Вставить(Элемент, КодРодителя);
КонецПроцедуры 

#КонецОбласти 

#Область ЗагрузкаТоваров

// Заполнение таблицы прайса данными из файла
Процедура ЗагрузитьДанныеТовара(ДокументDOM, ТаблицаПрайса)
	
	ПутьТоваров = "/yml_catalog/shop/offers/offer";
	Разыменователь = Новый РазыменовательПространствИменDOM(ДокументDOM);
	Результат      = ДокументDOM.ВычислитьВыражениеXPath(ПутьТоваров, ДокументDOM, Разыменователь);
	
	Пока Истина Цикл
		
		ТекЭлемент = Результат.ПолучитьСледующий();
		Если ТекЭлемент = Неопределено Тогда
			Прервать;
		КонецЕсли; 
		
		СтрокаПрайса = ТаблицаПрайса.Добавить();
		СтрокаПрайса.Код      = ТекЭлемент.ПолучитьАтрибут("id");
		СтрокаПрайса.Доступен = Булево(ТекЭлемент.ПолучитьАтрибут("available"));
		
		Для Каждого ВложеныйЭлемент ИЗ ТекЭлемент.ПолучитьЭлементыПоИмени("*") Цикл
			
			Если ВложеныйЭлемент.ИмяУзла = "name" Тогда
				СтрокаПрайса.Наименование = ВложеныйЭлемент.ТекстовоеСодержимое;
			ИначеЕсли ВложеныйЭлемент.ИмяУзла = "price" Тогда
				СтрокаПрайса.Цена = Число(ВложеныйЭлемент.ТекстовоеСодержимое);
			ИначеЕсли ВложеныйЭлемент.ИмяУзла = "categoryId" Тогда
				СтрокаПрайса.КодКатегории = ВложеныйЭлемент.ТекстовоеСодержимое;
			ИначеЕсли ВложеныйЭлемент.ИмяУзла = "picture" Тогда
				СтрокаПрайса.СсылкаНаИзображение = ВложеныйЭлемент.ТекстовоеСодержимое;
			ИначеЕсли ВложеныйЭлемент.ИмяУзла = "url" Тогда	
				СтрокаПрайса.СсылкаНаТовар = ВложеныйЭлемент.ТекстовоеСодержимое;
			//ИначеЕсли ВложеныйЭлемент.ИмяУзла = "" Тогда
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры 

#КонецОбласти 

#КонецОбласти 